imports:
    - { resource: parameters.yml }
    - { resource: security.yml }

framework:
    #esi:             ~
    translator:      ~
    secret:          "%secret%"
    router:
        resource: "%kernel.root_dir%/config/routing.yml"
        strict_requirements: ~
    form:            ~
    csrf_protection: ~
    validation:      { enable_annotations: true }
    templating:
        engines: ['twig']
        #assets_version: SomeVersionScheme
    default_locale:  "%locale%"
    trusted_proxies: ~
    session:         ~
    fragments:       ~
    http_method_override: true

# Twig Configuration
twig:
    debug:            "%kernel.debug%"
    strict_variables: "%kernel.debug%"

# Assetic Configuration
assetic:
    debug:          "%kernel.debug%"
    use_controller: false
    bundles:        [ ]
    #java: /usr/bin/java
    filters:
        cssrewrite: ~
        #closure:
        #    jar: %kernel.root_dir%/Resources/java/compiler.jar
        #yui_css:
        #    jar: %kernel.root_dir%/Resources/java/yuicompressor-2.4.7.jar

# Doctrine Configuration
doctrine:
    dbal:
        driver:   "%database_driver%"
        host:     "%database_host%"
        port:     "%database_port%"
        dbname:   "%database_name%"
        user:     "%database_user%"
        password: "%database_password%"
        charset:  UTF8
        # if using pdo_sqlite as your database driver, add the path in parameters.yml
        # e.g. database_path: %kernel.root_dir%/data/data.db3
        # path:     %database_path%
    orm:
        auto_generate_proxy_classes: "%kernel.debug%"
        entity_managers:
            default:
                auto_mapping: true
                mappings:
                    taggable:
                        type: annotation
                        prefix: DoctrineExtensions\Taggable\Entity
                        dir: "%kernel.root_dir%/../vendor/fpn/doctrine-extensions-taggable/metadata"

# Swiftmailer Configuration
swiftmailer:
    transport: "%mailer_transport%"
    host:      "%mailer_host%"
    username:  "%mailer_user%"
    password:  "%mailer_password%"
    spool:     { type: memory }

fos_user:
    db_driver: orm # other valid values are 'mongodb', 'couchdb' and 'propel'
    firewall_name: main
    user_class: CS\UserBundle\Entity\AUser
    service:
        user_manager: pugx_user_manager
    # Permet de renseigner le nouveau formulaire d'inscription

            
pugx_multi_user:
  users:
    utilisateur:
        entity: 
          class: CS\UserBundle\Entity\Utilisateur
        registration:
          form: 
            type: CS\UserBundle\Form\Type\RegistrationFormUtilisateurType
            name: cs_utilisateur_registration_form
          template: CSUserBundle:Registration:register_utilisateur.html.twig
        profile:
          form:
            type: ~
    admin:
        entity: 
          class: CS\UserBundle\Entity\Administrateur
        registration:
          form: 
            type: CS\UserBundle\Form\Type\RegistrationFormAdminType
            name: cs_admin_registration_form
          template: CSUserBundle:Registration:register_admin.html.twig
    fournisseur:
        entity: 
          class: CS\UserBundle\Entity\Fournisseur
        registration:
          form: 
            type: CS\UserBundle\Form\Type\RegistrationFormFournisseurType
            name: cs_fournisseur_registration_form
          template: CSUserBundle:Registration:register_fournisseur.html.twig
        profile:
          form: 
            type: ~

fpn_tag:
    model:
        tag_class:     CS\CommunityBundle\Entity\Community
        tagging_class: CS\CommunityBundle\Entity\CommunitySubscribing
        
services:
    cs.form.community_entry:
        class: CS\CommunityBundle\Form\Type\CommunityType
        arguments: [ "@fpn_tag.tag_manager" ]
        tags:
            - { name: form.type, alias: community_entry }
    

fos_elastica:
    clients:
        default: { host: localhost, port: 9200 }
    indexes:
        website:
            client: default
            settings:
                index:
                    analysis:
                        analyzer:
                            custom_search_analyzer:
                                type: custom
                                tokenizer: standard
                                filter   : [lowercase,mynGram]
                            custom_index_analyzer:
                                type: custom
                                tokenizer: standard
                                filter   : [standard, lowercase, asciifolding, mynGram]
                        filter:
                            custom_filter:
                                type: edgeNGram
                                side: front
                                min_gram: 1
                                max_gram: 20
                            mynGram : 
                                type : nGram
                                min_gram : 2
                                max_gram : 50
                            
            types:
                product:
                    mappings:
                        id:
                        score:
                        name: { search_analyzer: custom_search_analyzer, index_analyzer: custom_index_analyzer, type: string }
                        description: { search_analyzer: custom_search_analyzer, index_analyzer: custom_index_analyzer, type: string }
                        properties: { search_analyzer: custom_search_analyzer, index_analyzer: custom_index_analyzer, type: string }
                    persistence:
                        elastica_to_model_transformer:
                            ignore_missing: true
                        driver: orm
                        model: CS\ProductBundle\Entity\Product
                        provider: ~
                        finder: ~
                        listener: ~
                productByCommunity:
                    mappings:
                        score:
                        communities: { search_analyzer: custom_search_analyzer, index_analyzer: custom_index_analyzer, type: string }
                    persistence:
                        elastica_to_model_transformer:
                            ignore_missing: true                    
                        driver: orm
                        model: CS\ProductBundle\Entity\Product
                        provider: ~
                        finder: ~
                        listener: ~
                productByType:
                    mappings:
                        productType : { search_analyzer: custom_search_analyzer, index_analyzer: custom_index_analyzer, type: string }
                        score :
                    persistence:
                        elastica_to_model_transformer:
                            ignore_missing: true                    
                        driver: orm
                        model: CS\ProductBundle\Entity\Product
                        provider: ~
                        finder: ~
                        listener: ~
                       

                productByPrice:
                    mappings:
                        price :
                        score:          
                    persistence:
                        elastica_to_model_transformer:
                            ignore_missing: true                    
                        driver: orm
                        model: CS\ProductBundle\Entity\Product
                        provider: ~
                        finder: ~
                        listener: ~
                theme:
                    mappings:
                        title:
                        communities :
                            type: "nested"
                            properties:                    
                                score:

                                 
                    persistence:
                        elastica_to_model_transformer:
                            ignore_missing: true                    
                        driver: orm
                        model: CS\CommunityBundle\Entity\Theme
                        provider: ~
                        finder: ~
                        listener: ~
